""" Code du dashboard `dataset` qui affiche les donn√©es du corpus sous la forme d'une table filtrable et triable.

Il permet √©galement d'afficher le document num√©ris√© d'une √©dition en particulier
gr√¢ce √† l'API IIIF de Gallica et au visualiseur Mirador.
"""

import dash
import pandas as pd

data = ...  # üèóÔ∏è Compl√©ter moi : chargez les donn√©es depuis le CSV.

layout = ...  # üèóÔ∏è Compl√©ter moi : d√©finissez ici le layout du dashboard

if __name__ == "__main__":
    # ‚ÅâÔ∏è Qu'est-ce que c'est que ce IF √©trange ?
    #       La variable sp√©ciale  __name__ est une variable sp√©ciale fournie automatiquement par Python.
    #       Si le fichier est import√©, __name__ contient le nom du module import√© (i.e. le nom du fichier sans le .py).
    #       Si le fichier est ex√©cut√© directement, __name__ contient la valeur "__main__".
    #
    #       Donc, cette condition se traduit ainsi :
    #       "Si le fichier est ex√©cut√© directement (avec `python ./dataset.py`), alors cr√©e une application Dash et lance le serveur."
    #        Mais si on importe ce fichier dans un autre script, comme un module (avec `import dataset`), alors ne fait rien.
    #       L'int√©r√™t est de pouvoir importer les fonctions et classes d√©finies dans ce fichier sans forc√©ment lancer le serveur.
    #       On se servira de ce m√©canisme un peu plus tard.

    # 1. Instanciation
    app = dash.Dash()

    # 2. Layout : assignation du layout d√©clar√© plus haut
    app.layout = layout

    # print(app.layout.to_plotly_json()) #¬†Debug  √† d√©-commenter au besoin : affiche le layout en JSON

    # 3. Lancement du serveur
    app.run(debug=True)
